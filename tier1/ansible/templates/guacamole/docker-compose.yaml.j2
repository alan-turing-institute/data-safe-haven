---

version: "3.0"

services:
  database:
    image: postgres:{{ postgres_version }}
    container_name: postgres
    environment:
      - POSTGRES_DB={{ guac_db_name }}
      - POSTGRES_USER={{ guac_db_user }}
      - POSTGRES_PASSWORD={{ guac_db_password }}
    volumes:
      - {{ postgres_volume }}:/var/lib/postgresql/data
      - {{ init_db_file }}:/docker-entrypoint-initdb.d/init.sql
    restart: always
  guacd:
    image: guacamole/guacd:{{ guac_version }}
    container_name: guacd
    restart: always
  guacamole:
    image: guacamole/guacamole:{{ guac_version }}
    container_name: guacamole
    ports:
      - 127.0.0.1:8080:8080
    environment:
      - GUACAMOLE_HOME={{ guacamole_home_container }}
      - GUACD_HOSTNAME=guacd
      - POSTGRES_HOSTNAME=database
      - POSTGRES_DATABASE={{ guac_db_name }}
      - POSTGRES_USER={{ guac_db_user }}
      - POSTGRES_PASSWORD={{ guac_db_password }}
    volumes:
      - {{ guacamole_home_host }}:{{ guacamole_home_container }}
    restart: always
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.guacamole.rule=Host(`{{ guacamole_domain }}`)"
      - "traefik.http.routers.guacamole.tls=true"
{% if lets_encrypt %}
      - "traefik.http.routers.guacamole.tls.certResolver=le"
{% endif %}
      - "traefik.http.routers.guacamole.middleWares=add-guacamole"
      # Middlewares
      - "traefik.http.middleWares.add-guacamole.addPrefix.prefix=/guacamole"
  reverse_proxy:
    image: traefik:{{ traefik_version }}
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
{% if lets_encrypt %}
      - {{ traefik_acme_volume }}:/acme
{% endif %}
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.web.http.redirections.entryPoint.permanent=true"
      - "--entryPoints.websecure.address=:443"
{% if lets_encrypt %}
      - "--certificatesResolvers.le.acme.email={{ lets_encrypt_email }}"
      - "--certificatesResolvers.le.acme.storage=/acme/acme.json"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
{% endif %}

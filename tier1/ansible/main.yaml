---

- name: Basic hardening for all hosts
  hosts: all

  collections:
    - devsec.hardening

  roles:
    - role: wait_for_cloud_init

    - role: apt_cache
      become: yes

    - role: devsec.hardening.ssh_hardening
      become: yes

    - role: oefenweb.fail2ban
      become: yes

- name: Configure Guacamole VM
  hosts: guacamole

  vars_files:
    - terraform_vars.yaml

  vars:
    API_root: http://localhost:8080/guacamole/api
    data_source: postgresql
    guacadmin_file_path: "{{ ansible_user_dir }}/guacadmin"

  roles:
    - role: wait_for_cloud_init

    - role: apt_cache
      become: yes

    - role: geerlingguy.docker
      become: yes

    - role: geerlingguy.pip
      become: yes

  tasks:
    - name: Reset connection so that group changes take effect
      meta: reset_connection

    - name: Create database initialisation script
      block:
        - name: Check if database initialisation script exists
          ansible.builtin.stat:
            path: "{{ ansible_user_dir }}/init.sql"
          register: init_file

        - name: Get database initialisation script
          community.docker.docker_container:
            name: guacamole
            image: "guacamole/guacamole:{{ guac_version }}"
            command: /opt/guacamole/bin/initdb.sh --postgres
            cleanup: yes
            detach: no
          register: init_script
          when: not init_file.stat.exists

        - name: Write database initialisation script
          ansible.builtin.copy:
            dest: "{{ init_db_file }}"
            content: "{{ init_script.container.Output }}"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: 0644
          when: not init_file.stat.exists

    - name: Docker services
      block:
        - name: Template docker-compose file
          ansible.builtin.template:
            src: guacamole/docker-compose.yaml.j2
            dest: "{{ ansible_user_dir }}/docker-compose.yaml"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: 0644

        - name: Run docker services
          community.general.docker_compose:
            project_src: "{{ ansible_user_dir }}"
            project_name: guacamole
            pull: yes
          register: compose_output

        - name: Ensure that containers are running
          ansible.builtin.assert:
            that:
              - database.postgres.state.running
              - guacamole.guacamole.state.running
              - guacd.guacd.state.running
              - reverse_proxy.traefik.state.running

    - name: Check if password has been changed
      tags: guacamole
      ansible.builtin.stat:
        path: "{{ guacadmin_file_path }}"
      register: guacadmin_file

    - name: Set Guacamole admin password
      when: not guacadmin_file.stat.exists
      tags: guacamole
      # See https://github.com/ridvanaltun/guacamole-rest-api-documentation
      # and https://github.com/apache/guacamole-manual/pull/123/files
      block:
        - name: Get API token
          ansible.builtin.uri:
            url: "{{ API_root }}/tokens"
            method: POST
            user: "{{ guac_admin_user }}"
            password: guacadmin
            force_basic_auth: yes
            body_format: form-urlencoded
            remote_src: yes
          register: token

        - name: Change guacadmin password
          ansible.builtin.uri:
            url: "{{ API_root }}/session/data/{{ data_source }}/users/{{ guac_admin_user }}/password?token={{ token.json.authToken }}"
            method: PUT
            body:
              oldPassword: guacadmin
              newPassword: "{{ guac_admin_password }}"
            body_format: json
            status_code: "204"
            remote_src: yes

        - name: Create guacadmin file
          ansible.builtin.file:
            path: "{{ guacadmin_file_path }}"
            state: touch
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: 0644

      always:
        - name: Delete API token
          ansible.builtin.uri:
            url: "{{ API_root }}/tokens/{{ token.json.authToken }}?token={{ token.json.authToken }}"
            method: DELETE
            status_code: "204"
            remote_src: yes

    - name: Configure guacamole using API
      tags: guacamole
      # See https://github.com/ridvanaltun/guacamole-rest-api-documentation
      # and https://github.com/apache/guacamole-manual/pull/123/files
      block:
        - name: Get API token
          ansible.builtin.uri:
            url: "{{ API_root }}/tokens"
            method: POST
            user: "{{ guac_admin_user }}"
            password: "{{ guac_admin_password }}"
            force_basic_auth: yes
            body_format: form-urlencoded
            remote_src: yes
          register: token

        - name: Check if RDP connection for DSVM exists
          ansible.builtin.uri:
            url: "{{ API_root }}/session/data/{{ data_source }}/connections/{{ dsvm_connection_identifier }}?token={{ token.json.authToken }}"
            method: GET
            status_code: [200, 404]
          register: dsvm_connection

        - name: Create RDP connection for DSVM
          ansible.builtin.uri:
            url: "{{ API_root }}/session/data/{{ data_source }}/connections?token={{ token.json.authToken }}"
            method: POST
            body: "{{ dsvm_connection_params }}"
            body_format: json
            remote_src: yes
          when: dsvm_connection.status == 404

        - name: Update RDP connection for DSVM
          ansible.builtin.uri:
            url: "{{ API_root }}/session/data/{{ data_source }}/connections/{{ dsvm_connection_identifier }}?token={{ token.json.authToken }}"
            method: PUT
            body: "{{ dsvm_connection_params }}"
            body_format: json
            remote_src: yes
            status_code: 204
          when: dsvm_connection.status == 200

      always:
        - name: Delete API token
          ansible.builtin.uri:
            url: "{{ API_root }}/tokens/{{ token.json.authToken }}?token={{ token.json.authToken }}"
            method: DELETE
            status_code: "204"
            remote_src: yes

- name: Configure DSVM
  hosts: dsvm

  vars_files:
    - terraform_vars.yaml

  pre_tasks:
    - name: Wait for cloud init to finish
      ansible.builtin.wait_for:
        path: /var/lib/cloud/instance/boot-finished

    - name: Update apt cache
      become: yes
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 600

  tasks:
    - name: Install and configure RDP
      block:
        - name: Install xrdp
          become: yes
          ansible.builtin.apt:
            name: xrdp
            state: present

        - name: Start and enable xrdp service
          become: yes
          ansible.builtin.systemd:
            name: xrdp
            state: started
            enabled: yes

        - name: Set xrdp encryption level to high
          become: yes
          ansible.builtin.lineinfile:
            path: /etc/xrdp/xrdp.ini
            state: present
            regexp: '^(.*)encrypt_level=.*$'
            line: '\1encrypt_level=high'
            backrefs: yes
            backup: yes

        - name: Write startwm.sh script
          become: yes
          ansible.builtin.copy:
            dest: /etc/xrdp/startwm.sh
            owner: root
            group: root
            mode: 0755
            content: |
              #!/bin/sh
              if [ -r /etc/default/locale ]; then
                  . /etc/default/locale
                  export LANG LANGUAGE
              fi
              # Start xfce4
              startxfce4
            backup: yes

        - name: Ensure xrdp users is in the ssl-cert group
          # This is required to let xrdp access
          # `/etc/ssl/private/ssl-cert-snakeoil.key` which is symlinked to
          # `/etc/xrdp/key.pem`
          become: yes
          ansible.builtin.user:
            name: xrdp
            groups: ssl-cert
            append: yes
          register: xrdp_groups

        - name: Restart xrdp service
          become: yes
          ansible.builtin.systemd:
            name: xrdp
            state: restarted
          when: xrdp_groups.changed

    - name: Install and configure desktop
      block:
        - name: Install xfce desktop
          become: yes
          ansible.builtin.apt:
            name:
              - xubuntu-desktop
              - xubuntu-core
              - xfce4-terminal
            state: present
          async: 600
          poll: 5

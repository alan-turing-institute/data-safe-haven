#cloud-config

write_files:
  - path: "/etc/nslcd.conf"
    permissions: "0400"
    content: |
      # nslcd configuration file.
      # http://manpages.ubuntu.com/manpages/bionic/man5/nslcd.conf.5.html

      # Runtime options
      uid nslcd
      gid nslcd
      log syslog debug

      # Do not allow uids lower than 2000 to login
      nss_min_uid 2000

      # General connection options
      uri ldap://{{ldap_server_hostname}}:{{ldap_server_port}}

      # Search/mapping options
      base {{ldap_user_search_base}}
      base {{ldap_group_search_base}}

      # All users that are members of the correct group
      filter passwd {{{ldap_user_filter}}}

      # One group for each security group belonging to this SRE and for each primary user group for users that belong to a group in this SRE
      filter group {{{ldap_group_filter}}}


  - path: "/etc/pip.conf"
    permissions: "0444"
    content: |
      # Use the PyPI proxy for package installation
      [global]
      index = http://{{software_repository_hostname}}/repository/pypi-proxy
      index-url = http://{{software_repository_hostname}}/repository/pypi-proxy/simple
      trusted-host = {{software_repository_hostname}}

  - path: "/etc/R/Rprofile.site"
    permissions: "0444"
    content: |
      # Use the CRAN proxy for package installation
      local({
          r <- getOption("repos")
          r["CRAN"] <- "http://{{software_repository_hostname}}/repository/cran-proxy"
          options(repos = r)
      })

  - path: "/root/.ssh/desired_state_rsa"
    permissions: "0600"
    content: |
      {{ container_desired_state_private_key }}

  - path: "/root/desired_state.sh"
    permissions: "0700"
    content: |
      #!/usr/bin/env sh
      scp -i /root/.ssh/desired_state_rsa -r {{ container_desired_state_name }}.{{ storage_account_data_configuration_name }}.{{ container_desired_state_local_user }}@{{ container_desired_state_name }}.blob.core.windows.net:ansible ./
      ansible-playbook -i localhost ansible/desired_state.yaml

  - path: "/etc/systemd/system/desired-state.timer"
    permissions: "0644"
    content: |
      [Unit]
      Description=Run desired state script daily

      [Timer]
      OnCalendar=daily
      Persistent=true

      [Install]
      WantedBy=timers.target

  - path: "/etc/systemd/system/desired-state.service"
    permissions: "0644"
    content: |
      [Unit]
      Description=Run desired state script
      Wants=network-online.target
      After=network-online.target

      [Service]
      Type=oneshot
      ExecStartPre=sleep 1m
      ExecStart=/root/desired_state.sh


mounts:
  # Secure data is in a blob container mounted as NFSv3
  - ["{{storage_account_data_private_sensitive_name}}.blob.core.windows.net:/{{storage_account_data_private_sensitive_name}}/ingress", /data, nfs, "ro,_netdev,sec=sys,vers=3,nolock,proto=tcp"]
  - ["{{storage_account_data_private_sensitive_name}}.blob.core.windows.net:/{{storage_account_data_private_sensitive_name}}/egress", /output, nfs, "rw,_netdev,sec=sys,vers=3,nolock,proto=tcp"]
  # User data is in a file share mounted as NFSv4
  - ["{{storage_account_data_private_user_name}}.file.core.windows.net:/{{storage_account_data_private_user_name}}/shared", /shared, nfs, "_netdev,sec=sys,nconnect=4"]
  - ["{{storage_account_data_private_user_name}}.file.core.windows.net:/{{storage_account_data_private_user_name}}/home", /home, nfs, "_netdev,sec=sys,nconnect=4"]

# Add additional apt repositories
apt:
  debconf_selections:
    msodbcsql17: msodbcsql17 msodbcsql/ACCEPT_EULA boolean true
  http_proxy: http://{{apt_proxy_server_hostname}}:8000
  https_proxy: http://{{apt_proxy_server_hostname}}:8000
  preserve_sources_list: true  # Append to the existing /etc/apt/sources.list
  sources:
    microsoft-general.list:
      source: "deb https://packages.microsoft.com/ubuntu/22.04/prod jammy main"
      keyid: BC528686B50D79E339D3721CEB3E94ADBE1229CF  # Microsoft (Release signing) <gpgsecurity@microsoft.com>

# Install necessary apt packages
packages:
  - ansible
  - libnss-ldapd  # LDAP login
  - libpam-ldapd  # LDAP login
  - ldap-utils    # LDAP login
  - nfs-common    # Mounting shared volumes
package_update: true
package_upgrade: true

runcmd:
  # Restart services
  - systemctl restart nslcd

  # Mount all external volumes
  # --------------------------
  - echo ">=== Mounting all external volumes... ===<"
  - grep -v -e '^[[:space:]]*$' /etc/fstab | sed 's|^|  /etc/fstab  |'
  - mount -fav
  - while (! mountpoint -q /data); do sleep 5; mount /data; done
  - while (! mountpoint -q /home); do sleep 5; mount /home; done
  - while (! mountpoint -q /output); do sleep 5; mount /output; done
  - while (! mountpoint -q /shared); do sleep 5; mount /shared; done
  - findmnt

  # Enable and start desired state timer
  # ------------------------------------
  - systemctl enable desired-state.timer
  - systemctl start desired-state.timer

  # Run desired state service
  # -------------------------
  - systemctl start desired-state

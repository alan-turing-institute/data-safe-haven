#cloud-config

write_files:
  - path: "/opt/pg-ldap-sync/configuration.yaml"
    permissions: "0700"
    content: |
      {{guacamole_pg_ldap_sync.yaml}}

  - path: "/opt/guacamole/docker-compose.yml"
    permissions: "0400"
    content: |
      {{guacamole_docker_compose.yml}}

  - path: "/opt/nginx/nginx.conf"
    permissions: "0400"
    content: |
      {{guacamole_nginx_nginx.conf}}

  - path: "/opt/nginx/guacamole.conf"
    permissions: "0400"
    content: |
      {{guacamole_nginx_guacamole.conf}}

  - path: "/opt/postgresql/scripts/db_update.sql"
    permissions: "0444"
    content: |
      {{guacamole_db_update.sql}}

  - path: "/opt/postgresql/synchronise_database.sh"
    permissions: "0500"
    content: |
      #! /bin/bash
      echo "Running LDAP synchronisation..." | tee >(logger -t SafeHaven)
      pg_ldap_sync -c /opt/pg-ldap-sync/configuration.yaml -vv | logger -t SafeHaven
      echo "Updating database..." | tee >(logger -t SafeHaven)
      docker-compose -f /opt/guacamole/docker-compose.yml exec -T postgres psql -U guacamole -f /scripts/db_update.sql | logger -t SafeHaven
      echo "Finished database synchronisation" | tee >(logger -t SafeHaven)

  - path: "/opt/postgresql/data/connections.csv"
    permissions: "0444"
    content: |
      DSVM Main;{{initial_compute_vm_ip}}

# Set locale and timezone
locale: en_GB.UTF-8
timezone: {{timezone}}

# Set the NTP server
# By default we use Google's NTP servers which are incompatible with other servers due to leap-second smearing
ntp:
  pools:
    - {{ntp-server}}

# Configure apt repositories
apt:
  preserve_sources_list: true
  sources:
    docker.list:
      source: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88  # Docker Release (CE deb) <docker@docker.com>

# Install necessary apt packages
packages:
  - docker-ce
  - docker-compose
  - gcc
  - libpq-dev
  - make
  - ruby
  - ruby-dev
package_update: true
package_upgrade: true

runcmd:
  # Suppress apt prompts and warning messages
  - DEBIAN_FRONTEND=noninteractive
  - export DEBIAN_FRONTEND

  # Install pg-ldap-sync
  - echo ">=== Installing pg-ldap-sync... ===<"
  - gem install pg-ldap-sync

  # Clean up installation
  - echo ">=== Cleaning up apt-get packages... ===<"
  - apt-get -y autoremove
  - apt-get clean

  # Ensure that Docker is running
  - echo ">=== Current Docker status... ===<"
  - systemctl start docker
  - systemctl enable docker
  - systemctl status docker
  - docker --version
  - docker-compose --version

  # Generate some self-signed certificates that will later be replaced by real ones
  - echo ">=== Creating self-signed SSL certificates... ===<"
  - mkdir -p /opt/ssl/conf/live/{{sre_fqdn}}
  - openssl rand -out ${HOME}/.rnd -hex 256
  - openssl req -nodes -newkey rsa:2048 -new -x509 -days 1 -keyout /opt/ssl/conf/live/{{sre_fqdn}}/privkey.pem -out /opt/ssl/conf/live/{{sre_fqdn}}/fullchain.pem -subj '/CN=localhost'
  - ls -alh /opt/ssl/conf/live/{{sre_fqdn}}

  # Download the Let's Encrypt base certificate
  - LETS_ENCRYPT_CERTIFICATE_PATH=/opt/ssl/lets-encrypt-r3.pem
  - if [ ! -e $LETS_ENCRYPT_CERTIFICATE_PATH ]; then wget -O $LETS_ENCRYPT_CERTIFICATE_PATH https://letsencrypt.org/certs/lets-encrypt-r3.pem; fi

  # RFC-7919 recommended: https://tools.ietf.org/html/rfc7919
  - echo ">=== Generating 4096-bit server-side Diffie-Hellman key ... ===<"
  - openssl dhparam -dsaparam -out /opt/ssl/dhparam.pem 4096

  # Setup Guacamole
  - echo ">=== Starting Docker compose services... ===<"
  - docker-compose -f /opt/guacamole/docker-compose.yml up -d

  # Generate the necessary SQL config for the local PostgreSQL database and run it
  - echo ">=== Configuring local PostgreSQL database... ===<"
  - docker-compose -f /opt/guacamole/docker-compose.yml exec -T guacamole /opt/guacamole/bin/initdb.sh --postgres > /opt/postgresql/scripts/db_init.sql
  - echo "CREATE ROLE ldap_users;" >> /opt/postgresql/scripts/db_init.sql
  - echo "CREATE ROLE ldap_groups;" >> /opt/postgresql/scripts/db_init.sql
  - ls -alh /opt/postgresql/scripts/db_init.sql
  - docker-compose -f /opt/guacamole/docker-compose.yml exec -T postgres psql -U guacamole -f /scripts/db_init.sql

  # Add LDAP users with pg-ldap-sync and schedule a cronjob
  - echo ">=== Adding LDAP users with pg-ldap-sync... ===<"
  # Run the initial update and schedule a sync every 5 minutes
  - /opt/postgresql/synchronise_database.sh
  - echo ">=== Scheduling database sync every 5 minutes... ===<"
  - echo "*/5 * * * * root /opt/postgresql/synchronise_database.sh" >> /etc/crontab
  - tail -n 1 /etc/crontab


# Shutdown so that we can tell when the job has finished by polling the VM state
power_state:
  mode: poweroff
  message: "Shutting down as a signal that setup is finished"
  timeout: 30
  condition: true

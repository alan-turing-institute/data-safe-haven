#cloud-config

fqdn: <vm-fqdn>

disk_setup:
  /dev/disk/azure/scsi1/lun1:
    table_type: gpt
    layout: true
    overwrite: true

fs_setup:
  - device: /dev/disk/azure/scsi1/lun1
    filesystem: ext4
    parition: 1

mounts:
  - [/dev/disk/azure/scsi1/lun1-part1, /scratch, ext4, "defaults"]
  - [//<ingress-share-username>.file.core.windows.net/<ingress-container-name>, /data, cifs, "_netdev,credentials=/etc/ingresssmbcredentials.secret,vers=3.0,dir_mode=0755,file_mode=0744,serverino"]
  - [//<egress-share-username>.file.core.windows.net/<egress-container-name>, /output, cifs, "_netdev,credentials=/etc/egresssmbcredentials.secret,vers=3.0,dir_mode=0777,file_mode=0777,serverino"]

write_files:
  - path: "/etc/ingresssmbcredentials.secret"
    owner: root:root
    permissions: "0600"
    content: |
      username=<ingress-share-username>
      password=<ingress-share-password>
  - path: "/etc/egresssmbcredentials.secret"
    owner: root:root
    permissions: "0600"
    content: |
      username=<egress-share-username>
      password=<egress-share-password>
  - path: "/opt/nginx/cocalc.conf"
    owner: root:root
    permissions: "0600"
    content: |
      events {
      }

      http {
          error_log /etc/nginx/error_log.log warn;
          client_max_body_size 20m;
          map $http_upgrade $connection_upgrade {
              default upgrade;
              '' close;
          }
          upstream docker-cocalc {
              server cocalc;
          }
          server {
              listen 80;
              server_name <vm-fqdn>;
              location / {
                  return 301 https://$host$request_uri;
              }
          }
          server {
              listen 443 ssl;
              server_name <vm-fqdn>;
              ssl_certificate /etc/nginx/ssl/letsencrypt.cert;
              ssl_certificate_key /etc/nginx/ssl/letsencrypt.key;
              ssl_protocols TLSv1.2 TLSv1.3;
              location / {
                  proxy_pass https://cocalc;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection $connection_upgrade;
                  proxy_set_header Host $host;
              }
          }
      }

#cloud-config
package_update: true
package_upgrade: true

# Install LDAP tools for debugging LDAP issues
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - docker-ce
  - docker-compose
  - ldap-utils
  - software-properties-common

apt:
  # Preserves the existing /etc/apt/sources.list
  preserve_sources_list: true

  # Add repositories
  sources:
    gitlab.list:
      source: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      keyid: 8D81803C0EBFCD88

write_files:
  - path: "/docker-compose-hackmd.yml"
    content: |
      version: '3'
      services:
        database:
          # Don't upgrade PostgreSQL by simply changing the version number
          # You need to migrate the Database to the new PostgreSQL version
          image: postgres:11.5
          #mem_limit: 256mb         # version 2 only
          #memswap_limit: 512mb     # version 2 only
          #read_only: true          # not supported in swarm mode please enable along with tmpfs
          #tmpfs:
          #  - /run/postgresql:size=512K
          #  - /tmp:size=256K
          environment:
            - POSTGRES_USER=hackmd
            - POSTGRES_PASSWORD=hackmdpass
            - POSTGRES_DB=hackmd
          volumes:
            - database:/var/lib/postgresql/data
          networks:
            backend:
          restart: always

        app:
          image: nabo.codimd.dev/hackmdio/hackmd:1.4.1
          #mem_limit: 256mb         # version 2 only
          #memswap_limit: 512mb     # version 2 only
          #read_only: true          # not supported in swarm mode, enable along with tmpfs
          #tmpfs:
          #  - /tmp:size=512K
          #  - /hackmd/tmp:size=1M
          # Make sure you remove this when you use filesystem as upload type
          #  - /hackmd/public/uploads:size=10M
          volumes:
            - uploads:/hackmd/public/uploads
          environment:
            # DB_URL is formatted like: <databasetype>://<username>:<password>@<hostname>/<database>
            # Other examples are:
            # - mysql://hackmd:hackmdpass@database:3306/hackmd
            # - sqlite:///data/sqlite.db (NOT RECOMMENDED)
            # - For details see the official sequelize docs: http://docs.sequelizejs.com/en/v3/
            - CMD_DB_URL=postgres://hackmd:hackmdpass@database:5432/hackmd
            - CMD_ALLOW_ANONYMOUS=false
            - CMD_ALLOW_FREEURL=true
            - CMD_EMAIL=false
            - CMD_USECDN=false
            - CMD_LDAP_SEARCHFILTER=<hackmd-user-filter>
            - CMD_LDAP_SEARCHBASE=<hackmd-ldap-base>
            - CMD_LDAP_BINDCREDENTIALS=<hackmd-bind-creds>
            - CMD_LDAP_BINDDN=<hackmd-bind-dn>
            - CMD_LDAP_URL=<hackmd-ldap-url>
            - CMD_LDAP_PROVIDERNAME=<hackmd-ldap-netbios>
            - CMD_IMAGE_UPLOAD_TYPE=filesystem
          ports:
            # Ports that are published to the outside.
            # The latter port is the port inside the container. It should always stay on 3000
            # If you only specify a port it'll published on all interfaces. If you want to use a
            # local reverse proxy, you may want to listen on 127.0.0.1.
            # Example:
            # - "127.0.0.1:3000:3000"
            - "3000:3000"
          networks:
            backend:
          restart: always
          depends_on:
            - database

      # Define networks to allow best isolation
      networks:
        # Internal network for communication with PostgreSQL/MySQL
        backend:

      # Define named volumes so data stays in place
      volumes:
        # Volume for PostgreSQL/MySQL database
        database:
        uploads:

# Set locale and timezone
locale: en_GB.UTF-8
timezone: <timezone>

# Set the NTP server
# By default we use Google's NTP servers which are incompatible with other servers due to leap-second smearing
ntp:
  pools:
    - <ntp-server>

runcmd:
  # Configure server
  - echo "Configuring server"
  - echo "<hackmd-ip> <hackmd-hostname> <hackmd-fqdn>" >> /etc/hosts
  - dpkg-reconfigure -f noninteractive tzdata
  # Checking Docker status
  - echo "Current Docker status"
  - systemctl status docker
  # Pulling HackMD Docker image
  - echo "Pulling HackMD Docker image"
  - git clone https://github.com/hackmdio/docker-hackmd.git /src/docker-hackmd
  - echo "Overwriting HackMD configuration"
  - cp /docker-compose-hackmd.yml /src/docker-hackmd/docker-compose.yml
  - echo "Starting HackMD"
  - docker-compose -f /src/docker-hackmd/docker-compose.yml up -d

# Shutdown so that we can tell when the job has finished by polling the VM state
power_state:
  mode: poweroff
  message: "Shutting down as a signal that setup is finished"
  timeout: 30
  condition: True

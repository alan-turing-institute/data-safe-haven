#cloud-config

write_files:
  - path: "/etc/apt/apt.conf.d/00proxy"
    permissions: "0444"
    content: |
      Acquire::http::Proxy "http://{{shm.monitoring.updateServers.linux.ip}}:8000";

  - path: "/etc/audit/rules.d/audit.rules"
    permissions: "0400"
    content: |
      {{audit.rules}}

  - path: "/etc/clamav/clamd.conf"
    permissions: "0644"
    append: true
    content: |
      {{clamd.conf}}

  - path: "/etc/cron.d/clamav-freshclam"
    permissions: "0644"
    content: |
      # Run every day at a fixed time
      {{shm.monitoring.updateServers.schedule.daily_definition_updates.minute}} {{shm.monitoring.updateServers.schedule.daily_definition_updates.hour}} * * * freshclam

  - path: "/etc/cron.d/ldap-db-sync"
    permissions: "0644"
    content: |
      # Run user synchronisation every 10 minutes
      */10 * * * * root /opt/pg-ldap-sync/synchronise_database.sh

  - path: "/etc/systemd/system/clamav-clamonacc.service"
    permissions: "0644"
    content: |
      {{clamav-clamonacc.service}}

  - path: "/etc/systemd/system/clamav-clamdscan.service"
    permissions: "0644"
    content: |
      {{clamav-clamdscan.service}}

  - path: "/etc/systemd/system/clamav-clamdscan.timer"
    permissions: "0644"
    content: |
      {{clamav-clamdscan.timer}}

  - path: "/opt/guacamole/docker-compose.yaml"
    permissions: "0400"
    content: |
      {{guacamole_docker_compose.mustache.yaml}}

  - path: "/opt/nginx/nginx.conf"
    permissions: "0400"
    content: |
      {{guacamole_nginx_nginx.conf}}

  - path: "/opt/nginx/guacamole.conf"
    permissions: "0400"
    content: |
      {{guacamole_nginx_guacamole.mustache.conf}}

  - path: "/opt/pg-ldap-sync/configuration.yaml"
    permissions: "0400"
    content: |
      {{guacamole_pg_ldap_sync.mustache.yaml}}

  - path: "/opt/pg-ldap-sync/synchronise_database.sh"
    permissions: "0500"
    content: |
      {{guacamole_synchronise_database.sh}}

  - path: "/opt/postgresql/scripts/db_update.sql"
    permissions: "0444"
    content: |
      {{guacamole_db_update.mustache.sql}}

  - path: "/opt/postgresql/data/connections.csv"
    permissions: "0444"
    content: |
      SRD Main;{{guacamole.ipAddressFirstSRD}}

# Set locale and timezone
locale: en_GB.UTF-8
timezone: {{sre.time.timezone.linux}}

# Set the NTP server
# By default we use Google's NTP servers which are incompatible with other servers due to leap-second smearing
ntp:
  enabled: true
  pools:
    {{#shm.time.ntp.serverAddresses}}
    - {{.}}
    {{/shm.time.ntp.serverAddresses}}

# Configure apt repositories
apt:
  preserve_sources_list: true

# Install necessary apt packages
packages:
  - auditd
  - clamav
  - clamav-base
  - clamav-daemon
  - clamav-freshclam
  - clamav-unofficial-sigs
  - docker.io
  - docker-compose
  - gcc
  - libpq-dev
  - make
  - ruby
  - ruby-dev
package_update: true
package_upgrade: true

# Add the SRE admin (default) and guacamoledaemon users
users:
  - default
  - name: guacamoledaemon
    lock_passwd: true  # Lock the password to disable password login
    sudo: false        # This user will not have sudo privileges

runcmd:
  # Suppress apt prompts and warning messages
  - DEBIAN_FRONTEND=noninteractive
  - export DEBIAN_FRONTEND

  # Clean up installation
  - echo ">=== Cleaning up apt-get packages... ===<"
  - apt update
  - apt-get -y autoremove
  - apt-get clean
  - apt --fix-broken install

  # Ensure that auditd is running and enabled at startup
  - echo ">=== Enabling auditd services... ===<"
  - systemctl start auditd
  - systemctl enable auditd
  - sleep 20
  - systemctl status auditd

  # Configure ClamAV
  - echo ">=== Configure ClamAV... ===<"
  # Allow unlimited recursion when scanning
  - sed -i 's/^MaxDirectoryRecursion .*/MaxDirectoryRecursion 0/' /etc/clamav/clamd.conf
  # Enable ClamAV daemon
  - systemctl enable clamav-daemon
  # Enable ClamAV scan on access
  - systemctl enable clamav-clamonacc
  # Enable ClamAV daily scan
  - systemctl enable clamav-clamdscan.timer
  # Disable ClamAV database update on boot
  - systemctl stop clamav-freshclam
  - systemctl disable clamav-freshclam

  # Install pg-ldap-sync
  - echo ">=== Installing pg-ldap-sync... ===<"
  - gem install pg-ldap-sync

  # Ensure that Docker is running and enabled at startup
  - echo ">=== Configuring Docker... ===<"
  - systemctl enable docker
  - systemctl start docker
  - sleep 1m
  - systemctl status docker
  - docker --version
  - docker-compose --version

  # Set up the guacamoledaemon user
  - echo ">=== Configuring guacamoledaemon user... ===<"
  - groupadd docker 2> /dev/null
  - usermod -aG docker guacamoledaemon
  - newgrp docker
  - chown -R guacamoledaemon:guacamoledaemon /opt/guacamole /opt/nginx /opt/postgresql
  - ls -alh /opt/guacamole

  # Generate some self-signed certificates that will later be replaced by real ones
  - echo ">=== Creating self-signed SSL certificates... ===<"
  - mkdir -p /opt/ssl/conf/live/{{sre.domain.fqdn}}
  - openssl rand -out ${HOME}/.rnd -hex 256
  - openssl req -nodes -newkey rsa:2048 -new -x509 -days 1 -keyout /opt/ssl/conf/live/{{sre.domain.fqdn}}/privkey.pem -out /opt/ssl/conf/live/{{sre.domain.fqdn}}/fullchain.pem -subj '/CN=localhost'
  - ls -alh /opt/ssl/conf/live/{{sre.domain.fqdn}}

  # Download the Let's Encrypt base certificate
  - LETS_ENCRYPT_CERTIFICATE_PATH=/opt/ssl/lets-encrypt-r3.pem
  - if [ ! -e $LETS_ENCRYPT_CERTIFICATE_PATH ]; then wget -O $LETS_ENCRYPT_CERTIFICATE_PATH https://letsencrypt.org/certs/lets-encrypt-r3.pem; fi

  # RFC-7919 recommended: https://tools.ietf.org/html/rfc7919
  - echo ">=== Generating 4096-bit server-side Diffie-Hellman key... ===<"
  - openssl dhparam -dsaparam -out /opt/ssl/dhparam.pem 4096

  # Deploy Guacamole using Docker
  - echo ">=== Deploying Guacamole with Docker...  ===<"
  - su guacamoledaemon -c "docker-compose -f /opt/guacamole/docker-compose.yaml up -d"

  # Generate the necessary SQL config for the local PostgreSQL database and run it
  - echo ">=== Configuring local PostgreSQL database... ===<"
  - su guacamoledaemon -c "docker-compose -f /opt/guacamole/docker-compose.yaml exec -T guacamole /opt/guacamole/bin/initdb.sh --postgres" > /opt/postgresql/scripts/db_init.sql
  - echo "CREATE ROLE ldap_users;" >> /opt/postgresql/scripts/db_init.sql
  - echo "CREATE ROLE ldap_groups;" >> /opt/postgresql/scripts/db_init.sql
  - ls -alh /opt/postgresql/scripts/db_init.sql
  - su guacamoledaemon -c "docker-compose -f /opt/guacamole/docker-compose.yaml exec -T postgres psql -U guacamole -f /scripts/db_init.sql"

  # Add initial set of LDAP users with pg-ldap-sync
  - echo ">=== Adding LDAP users with pg-ldap-sync... ===<"
  - /opt/pg-ldap-sync/synchronise_database.sh

# Shutdown so that we can tell when the job has finished by polling the VM state
power_state:
  mode: poweroff
  message: "Shutting down as a signal that setup is finished"
  timeout: 30
  condition: true

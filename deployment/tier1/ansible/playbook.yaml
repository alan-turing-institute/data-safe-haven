---
- hosts: tier1

  vars_files:
    - users.yaml

  tasks:
    - name: Wait for cloud init to finish
      wait_for:
        path: /var/lib/cloud/instance/boot-finished

    - name: Enable public key authentication
      become: yes
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PubkeyAuthentication'
        line: 'PubkeyAuthentication yes'
      notify: Restart sshd

    - name: Disable password login
      become: yes
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify: Restart sshd

    - name: Disable root login
      become: yes
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no'
      notify: Restart sshd

    - name: Create users
      become: yes
      user:
        name: "{{ item.username }}"
        comment: "{{ item.name }}"
        state: present
      loop: "{{ users }}"

    - name: Add users public keys
      become: yes
      authorized_key:
        user: "{{ item.username }}"
        key: "{{ lookup('file', item.keyfile) }}"
        state: present
      loop: "{{ users }}"

    - name: Add admin users to the admin group
      become: yes
      user:
        name: "{{ item.username }}"
        append: true
        groups: admin 
      loop: "{{ users }}"
      when: item.admin

    - name: Allow users in the admin group to sudo without a password
      become: yes
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%ADMIN ALL='
        line: '%ADMIN ALL=(ALL) NOPASSWD: ALL'
        validate: /usr/sbin/visudo -cf %s

    - name: Install docker
      become: yes
      apt:
        update_cache: yes
        name: docker.io
        state: present

    - name: Install docker-compose
      become: yes
      apt:
        name: docker-compose
        state: present

    - name: Start and enable docker service
      become: yes
      systemd:
        name: docker.service
        enabled: yes
        state: started

    - name: Add admin user to docker group
      become: yes
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Pull cocalc docker image
      docker_image:
        name: sagemathinc/cocalc
        source: pull

    - name: Run cocalc with docker-compose
      docker_compose:
        project_name: cocalc
        definition:
          version: '2'
          services:
            app:
              image: sagemathinc/cocalc
              ports:
                - 127.0.0.1:443:443
              volumes:
                - /datadrive:/projects
              restart: always
      register: output

    - debug:
        var: output

    - assert:
        that:
          - "app.cocalc_app_1.state.running"


  handlers:
    - name: Restart sshd
      become: yes
      systemd:
        name: sshd.service
        state: restarted

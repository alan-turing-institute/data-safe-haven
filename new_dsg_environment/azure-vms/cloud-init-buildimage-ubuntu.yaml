#cloud-config

apt:
  # Preserves the existing /etc/apt/sources.list
  preserve_sources_list: true

  # Update apt database on first boot (ie run apt-get update)
  update: true

  # Add repositories
  sources:
    chronitis-jupyter.list:
      source: "ppa:chronitis/jupyter"

    marutter-c2d4u35.list:
      source: "ppa:marutter/c2d4u3.5"

    microsoft-prod.list:
      source: "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main"
      keyid: EB3E94ADBE1229CF

    microsoft-azure-cli.list:
      source: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ bionic main"
      keyid: EB3E94ADBE1229CF

    microsoft-vscode.list:
      source: "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
      keyid: EB3E94ADBE1229CF

    mono-project.list:
      source: "deb https://download.mono-project.com/repo/ubuntu stable-bionic main"
      keyserver: hkp://keyserver.ubuntu.com:80
      keyid: 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF

    nvidia.list:
      source: "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /"
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        Version: GnuPG v1

        mQINBFdtt4UBEAC8FDSWMR07GJZ265giLn7kLF+EsJCWESUq6Cd13QN0JQ/tLibi
        QlW4ZjeOnEH9VPlqh/mKqNMG4SwRt8S+GHpePMQrr0aOkiRGfCclnAWIZURSAP+t
        PLelCt43fkw1BBTopd/0oOzO8kHu8j8WU4A8GHxqghfFWPv54FQs2iaZ2eWR7a6d
        79IJrbDKaVCCiQrkhCM8m648pNKHhuoJ9cQXFV+uvwkpfmKWGQ4ultxlOyjLHJLF
        vuML2RuAO9IxbdZjzeYNN+T+wjFIBVcPnwEO+WrYgvGkT4r9aqVqTeg3EPb7QclV
        sKBVJdxk4jZl0y22HAWqScVi6SJ15uK9pXxywDZkbpuRBWx4ThWiGe/FiUa2igi9
        /SIvqN2TBY0g18sRTrylVr1wE1UGa/y7nDx6PoGCP1frBt8YUYt3pkM8Xvb2CRxx
        CyWwmuFEQHC6jCEWf7FnoBHBYQwTVGNrU0vkuIeDrm+ZAcv8wx+ie1hlFhqCCJnf
        jqeQ0/zA9RPmCPOkLyTdSsNZtlxxk7bzCdTdFFKzBjGTR7Gz3SMSp23d11eIyRiF
        HQsp2v0SvnPJ6OcgB95Hmo544vi3RuoVfovtDOdfSBCRxP+GhhxkKSrTleQjD0/r
        CGkdG2Kox3m9YllAsvZchLXlS7bZV9mGRF61mVMjF3HJRUQfBBm89VPQ+QARAQAB
        tCBjdWRhdG9vbHMgPGN1ZGF0b29sc0BudmlkaWEuY29tPokCNwQTAQgAIQUCV223
        hQIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRD2D0s9f6KvgNArEAChnfcW
        rYItgt7xXXubT6E+KpJyJ0RPrXf51S2mhciFbjDl+3EXRMRjOutVmgWYPWUUZaKR
        8Iez3Lz4BRmwYOWBLtdnOLbKoSsQUX95rnPFjfly/DFLfjKxz4NRBmh4r4/rCYWm
        2hmnXmOAi8kV7fqx3g5XMpJ//N6+T8ctEol2iZ82GrXjadcRWE4rAe7UyuEzJ74y
        6ZKIzk5ijdgEKtcaBhzEWvoV5Pr9nkn7ByGsdehKR/gNnjPMYXrklSHGfphJIsS2
        S32lMk/kuRjihBcWcYBXIPEQ7CV+PNW2TlkZj/YqTg637sZHwkhcjcNzxeqKvRYG
        8V7Ju5hTDxL1UQBmgDS3cRx1lw7tYRG5bS67tbC2dc/CpPkG5agiZ/WyoHQDnn4r
        1fRuOFx694QR6+0rAP6171xEEoNAPaH7gdJdhWKiYiJD0T2EEbW7wBUi/EupeKRv
        kR12R1jUa1mlpxNtWQxJ7qp98T9+DmkxI1XDmWx0/g4ryuicwLDSqoPgNcRNdSQb
        b8YfTqrkqaDdYzwLr/n0YKW3cYIvIeisV0WxRjb6OP7oAlAtaAhImlIc//51qNO7
        /WAud6qMtnhFoZayR/BzLKqnCioN5GYr9BAKskpPHe9cDKVS3fg+Qvc1sNJID+jf
        k52PqyW24Qsr0A9+5zQyE4tH9dfv120gj9avmg==
        =0nKc
        -----END PGP PUBLIC KEY BLOCK-----

    rproject-cran35.list:
      source: "deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/"
      keyserver: hkp://keyserver.ubuntu.com:80
      keyid: 51716619E084DAB9

    webupd8team-atom.list:
      source: "ppa:webupd8team/atom"

# List of packages to install with apt-get
packages:
  - adcli
  - apt-transport-https
  - atom
  - attr
  - azure-cli
  - code
  - cuda
  - default-jdk
  - docker.io
  - dotnet-sdk-2.1
  - emacs
  - firefox
  - g++-6
  - gcc-6
  - gdebi-core
  - git-core
  - krb5-kdc
  - ldap-utils
  - libasound2
  - libcanberra-gtk0
  - libgconf-2-4
  - libgit2-dev
  - libgmp-dev
  - libgnome-keyring0
  - libgsl-dev
  - libgtk-3-0
  - libhdf5-serial-dev
  - liblmdb-dev
  - libmariadb-client-lgpl-dev
  - libmpfr-dev
  - libnss-ldap
  - libnss-sss
  - libnss3
  - libpam-ldap
  - libpam-sss
  - libpoppler-cpp-dev
  - libpq-dev
  - librsvg2-dev
  - libssl-dev
  - libudunits2-dev
  - libxss1
  - mono-complete
  - mono-devel
  - nvidia-cuda-toolkit
  - octave
  - oddjob
  - oddjob-mkhomedir
  - postgresql
  - postgresql-contrib
  - r-base
  - r-base-core
  - r-base-dev
  - r-bioc-biobase
  - r-bioc-cummerbund
  - r-bioc-deseq2
  - r-bioc-ebseq
  - r-bioc-graph
  - r-bioc-gviz
  - r-bioc-interactivedisplaybase
  - r-bioc-limma
  - r-bioc-metagenomeseq
  - r-bioc-phyloseq
  - r-bioc-rbgl
  - r-cran-abind
  - r-cran-ada
  - r-cran-akima
  - r-cran-ape
  - r-cran-assertthat
  - r-cran-backports
  - r-cran-bbmisc
  - r-cran-biocmanager
  - r-cran-bitops
  - r-cran-boot
  - r-cran-brms
  - r-cran-car
  - r-cran-care
  - r-cran-caret
  - r-cran-checkmate
  - r-cran-chron
  - r-cran-class
  - r-cran-cluster
  - r-cran-coda
  - r-cran-codetools
  - r-cran-colorramps
  - r-cran-colorspace
  - r-cran-corrplot
  - r-cran-cowplot
  - r-cran-coxboost
  - r-cran-crayon
  - r-cran-cvst
  - r-cran-cvtools
  - r-cran-data.table
  - r-cran-dbi
  - r-cran-deepnet
  - r-cran-devtools
  - r-cran-diagrammer
  - r-cran-dichromat
  - r-cran-digest
  - r-cran-directlabels
  - r-cran-dlm
  - r-cran-doby
  - r-cran-doparallel
  - r-cran-dplyr
  - r-cran-dppackage
  - r-cran-dt
  - r-cran-dtw
  - r-cran-dummies
  - r-cran-dygraphs
  - r-cran-e1071
  - r-cran-emulator
  - r-cran-evaluate
  - r-cran-factominer
  - r-cran-fda
  - r-cran-fields
  - r-cran-foreach
  - r-cran-forecast
  - r-cran-foreign
  - r-cran-formula
  - r-cran-gamlss
  - r-cran-gamlss.dist
  - r-cran-gamlss.mx
  - r-cran-gbm
  - r-cran-gdata
  - r-cran-ggally
  - r-cran-ggforce
  - r-cran-ggmap
  - r-cran-ggplot2
  - r-cran-ggridges
  - r-cran-ggvis
  - r-cran-glmnet
  - r-cran-googlevis
  - r-cran-gplots
  - r-cran-gridextra
  - r-cran-gtable
  - r-cran-highr
  - r-cran-hmisc
  - r-cran-htmltools
  - r-cran-httpuv
  - r-cran-httr
  - r-cran-igraph
  - r-cran-irace
  - r-cran-iterators
  - r-cran-jsonlite
  - r-cran-kernlab
  - r-cran-kernsmooth
  - r-cran-kknn
  - r-cran-kml
  - r-cran-knitr
  - r-cran-labeling
  - r-cran-lattice
  - r-cran-lazyeval
  - r-cran-leaflet
  - r-cran-lme4
  - r-cran-loo
  - r-cran-lubridate
  - r-cran-magrittr
  - r-cran-maps
  - r-cran-maptools
  - r-cran-markdown
  - r-cran-mass
  - r-cran-matrix
  - r-cran-matrixstats
  - r-cran-mboost
  - r-cran-mclust
  - r-cran-mcmcpack
  - r-cran-mcspatial
  - r-cran-mgcv
  - r-cran-mime
  - r-cran-mlbench
  - r-cran-mlr
  - r-cran-multcomp
  - r-cran-munsell
  - r-cran-ndtv
  - r-cran-network
  - r-cran-neuralnet
  - r-cran-nlme
  - r-cran-nnet
  - r-cran-parallelmap
  - r-cran-paramhelpers
  - r-cran-party
  - r-cran-pbdzmq
  - r-cran-pls
  - r-cran-plyr
  - r-cran-polycor
  - r-cran-pomp
  - r-cran-premium
  - r-cran-pscl
  - r-cran-purrr
  - r-cran-pvclust
  - r-cran-quanteda
  - r-cran-quantmod
  - r-cran-r6
  - r-cran-randomforest
  - r-cran-randomforestsrc
  - r-cran-ranger
  - r-cran-rcolorbrewer
  - r-cran-rcpp
  - r-cran-rcpparmadillo
  - r-cran-rcppeigen
  - r-cran-rcurl
  - r-cran-readr
  - r-cran-readxl
  - r-cran-repr
  - r-cran-reshape
  - r-cran-reshape2
  - r-cran-rgdal
  - r-cran-rgeos
  - r-cran-rgl
  - r-cran-rjava
  - r-cran-rmarkdown
  - r-cran-rmysql
  - r-cran-rocr
  - r-cran-roxygen2
  - r-cran-rpart
  - r-cran-rpostgresql
  - r-cran-rpython
  - r-cran-rsqlite
  - r-cran-rstan
  - r-cran-runjags
  - r-cran-rweka
  - r-cran-scales
  - r-cran-shiny
  - r-cran-slam
  - r-cran-sna
  - r-cran-snowballc
  - r-cran-sourcetools
  - r-cran-sp
  - r-cran-spacyr
  - r-cran-spatial
  - r-cran-sqldf
  - r-cran-stargazer
  - r-cran-stm
  - r-cran-stringi
  - r-cran-stringr
  - r-cran-surveillance
  - r-cran-survival
  - r-cran-synthpop
  - r-cran-tcltk2
  - r-cran-testthat
  - r-cran-text2vec
  - r-cran-tgp
  - r-cran-threejs
  - r-cran-tibble
  - r-cran-tidyr
  - r-cran-tidytext
  - r-cran-tidyverse
  - r-cran-tmap
  - r-cran-topicmodels
  - r-cran-urca
  - r-cran-uuid
  - r-cran-vars
  - r-cran-vcd
  - r-cran-vioplot
  - r-cran-viridis
  - r-cran-visnetwork
  - r-cran-wordcloud
  - r-cran-xgboost
  - r-cran-xlsx
  - r-cran-xml
  - r-cran-xtable
  - r-cran-xts
  - r-cran-yaml
  - r-cran-zoo
  - r-recommended
  - realmd
  - scala
  - sssd
  - sssd-tools
  - xfce4
  - xfce4-terminal
  - xrdp

runcmd:
  # Clean up installation
  - echo "*** Cleaning up apt-get packages... ***"
  - apt-get clean

  #IF_TORCH_ENABLED # Install torch
  #IF_TORCH_ENABLED - echo "*** Installing torch... ***"
  #IF_TORCH_ENABLED - mkdir -p /opt/torch
  #IF_TORCH_ENABLED - cd /opt/torch
  #IF_TORCH_ENABLED - git clone https://github.com/torch/distro.git /opt/torch --recursive
  #IF_TORCH_ENABLED - sed -i '/python-software-properties/s/^/#/g' install-deps
  #IF_TORCH_ENABLED - bash install-deps
  #IF_TORCH_ENABLED # Switch compilers to gcc-6 and g++-6 or compilation will fail
  #IF_TORCH_ENABLED - ln -s /usr/bin/gcc-6 /usr/local/cuda/bin/gcc
  #IF_TORCH_ENABLED - ln -s /usr/bin/g++-6 /usr/local/cuda/bin/g++
  #IF_TORCH_ENABLED - rm /usr/bin/gcc; ln -s /usr/bin/gcc-6 /usr/bin/gcc
  #IF_TORCH_ENABLED - rm /usr/bin/g++; ln -s /usr/bin/g++-6 /usr/bin/g++
  #IF_TORCH_ENABLED # Build with half-operators disabled as these are included in CUDA 9
  #IF_TORCH_ENABLED - sed -i 's|/usr/bin/env bash|/usr/bin/env bash\nexport TORCH_NVCC_FLAGS="-D__CUDA_NO_HALF_OPERATORS__"|' install.sh
  #IF_TORCH_ENABLED - bash install.sh -b
  #IF_TORCH_ENABLED # ... and now switch them back
  #IF_TORCH_ENABLED - rm /usr/bin/gcc; ln -s /usr/bin/gcc-7 /usr/bin/gcc
  #IF_TORCH_ENABLED - rm /usr/bin/g++; ln -s /usr/bin/g++-7 /usr/bin/g++
  #IF_TORCH_ENABLED - sed -i 's|\(.*\)"|\1:/opt/torch/install/bin"|' /etc/environment
  #IF_TORCH_ENABLED - export PATH=$PATH:/opt/torch/install/bin
  #IF_TORCH_ENABLED - if [ "$(which th)" = "" ]; then echo "Could not build Torch"; exit 1; fi

  # Install latest anaconda version (download is ~640MB)
  # - export ANACONDA_INSTALL_SCRIPT="Anaconda3-5.3.1-Linux-x86_64.sh"
  - export ANACONDA_INSTALL_SCRIPT="Miniconda3-latest-Linux-x86_64.sh"
  - echo "*** Installing Anaconda... ***"
  - cd /tmp
  - curl -O https://repo.anaconda.com/archive/${ANACONDA_INSTALL_SCRIPT}
  - bash $ANACONDA_INSTALL_SCRIPT -b -p /anaconda
  - rm $ANACONDA_INSTALL_SCRIPT
  - sed -i 's|\(.*\)"|\1:/anaconda/bin"|' /etc/environment
  - export PATH=$PATH:/anaconda/bin
  - echo "export PATH=$PATH:/anaconda/bin" >> /etc/bash.bashrc
  # Add channels
  - conda config --add channels anaconda
  - conda config --add channels auto
  - conda config --add channels conda-forge
  - conda config --add channels pytorch
  - conda config --add channels r
  # Increase timeouts and retries for downloading packages (we had some connection issues in testing)
  - conda config --set remote_connect_timeout_secs 30
  - conda config --set remote_max_retries 10
  - conda config --set remote_read_timeout_secs 120
  # Prepare environments
  - echo "*** Initial conda environments... ***"
  - conda env list
  # Explicitly requested packages
  - export PYALLREQUESTEDPACKAGES="ipykernel jupyter_client jupyterlab keras notebook pandas pandas-datareader pandas-profiling pandasql pystan pytorch r-irkernel scikit-image scikit-learn tensorflow torchvision"
  - export PY27REQUESTEDPACKAGES="monocle"
  - export PY35REQUESTEDPACKAGES="jupyterhub jupyterhub-ldapauthenticator"
  - export PY36REQUESTEDPACKAGES="jupyterhub jupyterhub-ldapauthenticator"
  # Packages from Anaconda recommendations
  - export PYALLANACONDAPACKAGES="alabaster asn1crypto astroid astropy attrs babel backports backports.shutil_get_terminal_size beautifulsoup4 bitarray bkcharts blas blaze bleach blosc bokeh boto bottleneck bzip2 ca-certificates cairo certifi cffi chardet click cloudpickle clyent colorama contextlib2 cryptography curl cycler cython cytoolz dask dask-core datashape dbus decorator distributed docutils entrypoints et_xmlfile expat fastcache filelock flask flask-cors fontconfig freetype get_terminal_size gevent glib glob2 gmp gmpy2 graphite2 greenlet gst-plugins-base gstreamer h5py harfbuzz hdf5 heapdict html5lib icu idna imageio imagesize intel-openmp ipython ipython_genutils ipywidgets isort itsdangerous jbig jdcal jedi jinja2 jpeg jsonschema jupyter jupyter_console jupyter_core jupyterlab_launcher kiwisolver lazy-object-proxy libcurl libedit libffi libgcc-ng libgfortran-ng libpng libsodium libssh2 libstdcxx-ng libtiff libtool libxcb libxml2 libxslt llvmlite locket lxml lzo markupsafe matplotlib mccabe mistune mkl mkl-service mkl_fft mkl_random more-itertools mpc mpfr mpmath msgpack-python multipledispatch navigator-updater nbconvert nbformat ncurses networkx nltk nose numba numexpr numpy numpy-base numpydoc odo olefile openpyxl openssl packaging pandoc pandocfilters pango parso partd patchelf path.py pathlib2 patsy pcre pep8 pexpect pickleshare pillow pip pixman pkginfo pluggy ply prompt_toolkit psutil ptyprocess py pycodestyle pycosat pycparser pycrypto pycurl pyflakes pygments pylint pyodbc pyopenssl pyparsing pyqt pysocks pytables pytest python-dateutil pytz pywavelets pyyaml pyzmq qt qtawesome qtconsole qtpy readline requests rope ruamel_yaml scipy seaborn send2trash setuptools simplegeneric singledispatch sip six snappy snowballstemmer sortedcollections sortedcontainers sphinx sphinxcontrib sphinxcontrib-websupport spyder sqlalchemy sqlite statsmodels sympy tblib terminado testpath tk toolz tornado traitlets unicodecsv unixodbc urllib3 wcwidth webencodings werkzeug wheel widgetsnbextension wrapt xlrd xlsxwriter xlwt xz yaml zeromq zict zlib"
  - export PY27ANACONDAPACKAGES="appdirs atomicwrites automat backports.functools_lru_cache backports_abc cdecimal configparser constantly defusedxml enum34 fribidi funcsigs functools32 futures grin hyperlink incremental ipaddress libuuid linecache2 monocle prometheus_client pyasn1 pyasn1-modules pycairo scandir service_identity spyder-kernels ssl_match_hostname subprocess32 tqdm traceback2 twisted typing unittest2 zlib zope zope.interface"
  - export PY35ANACONDAPACKAGES="backcall pytest-arraydiff pytest-astropy pytest-doctestplus pytest-openfiles pytest-remotedata typing zlib"
  - export PY36ANACONDAPACKAGES="appdirs atomicwrites automat backcall constantly defusedxml fribidi hyperlink incremental jeepney keyring libuuid prometheus_client pyasn1 pyasn1-modules pytest-arraydiff pytest-astropy pytest-doctestplus pytest-openfiles pytest-remotedata secretstorage service_identity spyder-kernels tqdm twisted typed-ast zlib zope zope.interface"
  # Packages from other recommendations....
  # None yet
  - echo "*** Working on py27 environment... ***"
  - export PYTHON27PACKAGES="$PYALLREQUESTEDPACKAGES $PY27REQUESTEDPACKAGES $PYALLANACONDAPACKAGES $PY27ANACONDAPACKAGES"
  - if [ "$(conda env list | grep py27)" = "" ]; then conda create -y --verbose --name py27 python=2.7 $PYTHON27PACKAGES; else conda install -y --verbose --name py27 $PYTHON27PACKAGES; fi
  - echo "*** Working on py35 environment... ***"
  - export PYTHON35PACKAGES="$PYALLREQUESTEDPACKAGES $PY35REQUESTEDPACKAGES $PYALLANACONDAPACKAGES $PY35ANACONDAPACKAGES"
  - if [ "$(conda env list | grep py35)" = "" ]; then conda create -y --verbose --name py35 python=3.5 $PYTHON35PACKAGES; else conda install -y --verbose --name py35 $PYTHON35PACKAGES; fi
  - echo "*** Working on py36 environment... ***"
  - export PYTHON36PACKAGES="$PYALLREQUESTEDPACKAGES $PY36REQUESTEDPACKAGES $PYALLANACONDAPACKAGES $PY36ANACONDAPACKAGES"
  - if [ "$(conda env list | grep py36)" = "" ]; then conda create -y --verbose --name py36 python=3.6 $PYTHON36PACKAGES; else conda install -y --verbose --name py36 $PYTHON36PACKAGES; fi
  - echo "*** Skipping conda cleanup to permit new virtual environments to be created by users... ***"
  - echo "*** Final conda environments... ***"
  - conda env list
  - if [ "$(conda env list | grep py27)" = "" ]; then echo "Could not build python 2.7 environment"; exit 1; fi
  - if [ "$(conda env list | grep py35)" = "" ]; then echo "Could not build python 3.5 environment"; exit 1; fi
  - if [ "$(conda env list | grep py36)" = "" ]; then echo "Could not build python 3.6 environment"; exit 1; fi

  # Ensure that R packages are installed
  # Set number of cores R should use to install packages to the number of cores available on the VM
  # (R builds a lot of packages from source so we can get a decent speedup here)
  -  Rscript -e "nCores = parallel::detectCores(); options('Ncpus' = nCores); getOption('Ncpus', 1L)"
  # CRAN
  - echo "*** Installing additional R packages... ***"
  - echo "Previously installed CRAN packages:"
  - Rscript -e "installed.packages()[,'Package']"
  - export CRANPACKAGES="'abind', 'ada', 'akima', 'ape', 'assertthat', 'AUC', 'backports', 'BBmisc', 'bedr', 'BiocManager', 'bitops', 'boot', 'brms', 'car', 'care', 'caret', 'checkmate', 'chron', 'class', 'cluster', 'coda', 'codetools', 'colorRamps', 'colorspace', 'COMBAT', 'compiler', 'corrgram', 'corrplot', 'cowplot', 'CoxBoost', 'crayon', 'CVST', 'cvTools', 'data.table', 'datasets', 'dbarts', 'DBI', 'deepnet', 'devtools', 'DiagrammeR', 'dichromat', 'digest', 'directlabels', 'dirichletprocess', 'dlm', 'doBy', 'doParallel', 'dplyr', 'DPpackage', 'DT', 'dtw', 'dummies', 'dygraphs', 'e1071', 'emulator', 'evaluate', 'factoextra', 'FactoMineR', 'fda', 'fields', 'fmsb', 'foreach', 'forecast', 'foreign', 'Formula', 'gamlss.dist', 'gamlss.mx', 'gamlss.nl', 'gamlss.spatial', 'gamlss', 'gbm', 'gdata', 'GGally', 'ggforce', 'ggmap', 'ggplot2', 'ggridges', 'ggvis', 'glmnet', 'googleVis', 'gplots', 'graphics', 'grDevices', 'grid', 'gridExtra', 'gtable', 'h2o', 'highr', 'Hmisc', 'htmltools', 'httpuv', 'httr', 'igraph', 'irace', 'IRdisplay', 'iterators', 'jsonlite', 'kernlab', 'KernSmooth', 'kknn', 'kml', 'kmlShape', 'knitr', 'labeling', 'lattice', 'lazyeval', 'LDAvis', 'leaflet', 'lme4', 'loo', 'lubridate', 'magrittr', 'maps', 'maptools', 'markdown', 'MASS', 'Matrix', 'matrixStats', 'mboost', 'mclust', 'MCMCpack', 'McSpatial', 'methods', 'mgcv', 'mime', 'mlbench', 'mlr', 'multcomp', 'munsell', 'ndtv', 'network', 'networkD3', 'neuralnet', 'nlme', 'nnet', 'parallel', 'parallelMap', 'ParamHelpers', 'party', 'pbdZMQ', 'pls', 'plyr', 'polycor', 'pomp', 'PReMiuM', 'pscl', 'purrr', 'pvclust', 'quanteda', 'quantmod', 'R6', 'randomForest', 'RColorBrewer', 'RCurl', 'readr', 'readtext', 'readxl', 'repr', 'reshape', 'reshape2', 'revealjs', 'rgdal', 'realxl', 'rgeos', 'rgl', 'rJava', 'rmarkdown', 'RMySQL', 'ROCR', 'roxygen2', 'rpart', 'RPostgreSQL', 'rPython', 'RSQLite', 'rstan', 'runjags', 'RWeka', 'Scale', 'scales', 'Seurat', 'shiny', 'slam', 'sna', 'SnowballC', 'sourcetools', 'sp', 'spacyr', 'spatial', 'splines', 'sqldf', 'stargazer', 'stats', 'stats4', 'stm', 'stringi', 'stringr', 'surveillance', 'survival', 'synthpop', 'tcltk2', 'testthat', 'text2vec', 'tgp', 'threejs', 'tibble', 'tidyr', 'tidyr', 'tidytext', 'tidyverse', 'tmap', 'tools', 'topicmodels', 'traj', 'tsne', 'urca', 'utils', 'uuid', 'varbvs', 'vars', 'vcd', 'vioplot', 'viridis', 'visNetwork', 'wordcloud', 'xgboost', 'XLConnect', 'xlsx', 'XML', 'xtable', 'xts', 'yaml', 'zoo'"
  - echo "CRAN packages remaining to be installed:"
  - Rscript -e "list.of.packages <- c($CRANPACKAGES); new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]; print(new.packages); if(length(new.packages)) install.packages(new.packages, repos='https://cran.rstudio.com/')"
  # Bioconductor
  - echo "Previously installed BioConductor packages:"
  - export BIOCPACKAGES="'apeglm', 'ballgown', 'Biobase', 'ChemmineR', 'clusterProfiler', 'ComplexHeatmap', 'ConsensusClusterPlus', 'cummeRbund', 'dada2', 'DECIPHER', 'DESeq2', 'destiny', 'DirichletMultinomial', 'DMRcate', 'EBSeq', 'edgeR', 'fastseg', 'FlowSOM', 'flowUtils', 'ggtree', 'GOSemSim', 'GOstats', 'graph', 'graphite', 'GSEABase', 'Gviz', 'interactiveDisplayBase', 'KEGGgraph', 'limma', 'made4', 'maftools', 'metagenomeSeq', 'minet', 'MLInterfaces', 'monocle', 'pathview', 'pcaMethods', 'phyloseq', 'RankProd', 'RBGL', 'RDAVIDWebService', 'Rgraphviz', 'safe', 'SC3', 'scater', 'scde', 'scran', 'SNPRelate', 'SPIA', 'supraHex', 'sva', 'TCGAbiolinks', 'TimeSeriesExperiment', 'topGO', 'treeio'"
  - Rscript -e "list.of.packages <- c($BIOCPACKAGES); old.packages <- list.of.packages[(list.of.packages %in% installed.packages()[,'Package'])]; print(old.packages);"
  - echo "BioConductor packages remaining to be installed:"
  - Rscript -e "list.of.packages <- c($BIOCPACKAGES); new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]; print(new.packages); if(length(new.packages)) BiocManager::install(new.packages)"
  # Install R packages from custom repos
  - Rscript -e "install.packages('INLA', repos='https://inla.r-inla-download.org/R/testing', dep=TRUE)"
  - Rscript -e "devtools::install_github('dgrtwo/gganimate')"
  # Install RStudio
  - echo "*** Installing RStudio... ***"
  # Ensure RStudio picks up system R rather than Conda R for all users
  - echo "export RSTUDIO_WHICH_R=/usr/bin/R" >> /etc/bash.bashrc
  - cd /tmp
  - wget https://download1.rstudio.org/rstudio-xenial-1.1.463-amd64.deb
  - gdebi --non-interactive rstudio-xenial-1.1.463-amd64.deb
  - rm -f rstudio-xenial-1.1.463-amd64.deb
  - if [ ! -e "/usr/bin/rstudio" ]; then echo "Could not install RStudio"; exit 1; fi

  # Install latest julia version
  - echo "*** Installing Julia... ***"
  - echo "Preparing directory..."
  - mkdir -p /opt/julia
  - cd /opt/julia
  - echo "Downloading package..."
  - curl -O https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.1-linux-x86_64.tar.gz
  - echo "Installing and cleaning up..."
  - tar -zxf julia-1.0.1-linux-x86_64.tar.gz
  - rm -rf julia-1.0.1-linux-x86_64.tar.gz
  - sed -i 's|\(.*\)"|\1:/opt/julia/julia-1.0.1/bin"|' /etc/environment
  - export PATH=$PATH:/opt/julia/julia-1.0.1/bin
  - echo "export PATH=$PATH:/opt/julia/julia-1.0.1/bin" >> /etc/bash.bashrc
  - if [ "$(which julia)" = "" ]; then echo "Could not install Julia"; exit 1; fi

  # Install jupyter kernels
  - echo "*** Setting up R and Julia kernels for jupyter... ***"
  - Rscript -e "devtools::install_github('IRkernel/IRkernel')"
  - Rscript -e "IRkernel::installspec(user = FALSE)"
  - julia -e 'using Pkg; Pkg.add("IJulia"); Pkg.build("IJulia")'

  # Install spark
  - echo "*** Installing spark... ***"
  - mkdir -p /opt/spark
  - cd /opt/spark
  - curl -O http://apache.mirror.anlx.net/spark/spark-2.4.0/spark-2.4.0-bin-hadoop2.7.tgz
  - tar -zxf spark-2.4.0-bin-hadoop2.7.tgz
  - rm -rf spark-2.4.0-bin-hadoop2.7.tgz
  - sed -i 's|\(.*\)"|\1:/opt/spark/spark-2.4.0-bin-hadoop2.7/bin"|' /etc/environment
  - export PATH=$PATH:/opt/spark/spark-2.4.0-bin-hadoop2.7/bin
  - echo "export PATH=$PATH:/opt/spark/spark-2.4.0-bin-hadoop2.7/bin" >> /etc/bash.bashrc
  - if [ "$(which spark-shell)" = "" ]; then echo "Could not install spark"; exit 1; fi

  # Install azcopy
  - echo "*** Installing azcopy... ***"
  - cd /tmp
  - wget -O azcopy.tar.gz https://aka.ms/downloadazcopylinux64
  - tar -xf azcopy.tar.gz
  - bash install.sh
  - rm -rf azcopy.tar.gz azcopy install.sh
  - if [ "$(which azcopy)" = "" ]; then echo "Could not install azcopy"; exit 1; fi

  # Azure Storage Explorer
  - mkdir -p /opt/azurestorage
  - cd /opt/azurestorage
  - wget http://download.microsoft.com/download/A/E/3/AE32C485-B62B-4437-92F7-8B6B2C48CB40/previous-StorageExplorer-linux-x64.tar.gz
  - tar -zxf previous-StorageExplorer-linux-x64.tar.gz
  - rm -f previous-StorageExplorer-linux-x64.tar.gz
  - sed -i 's|\(.*\)"|\1:/opt/azurestorage/"|' /etc/environment
  - export PATH=$PATH:/opt/azurestorage/
  - echo "export PATH=$PATH:/opt/azurestorage/" >> /etc/bash.bashrc
  - if [ "$(which StorageExplorer)" = "" ]; then echo "Could not install StorageExplorer"; exit 1; fi

  # Check for successful installations
  - echo "*** Checking for successful installation... ***"
  # - programming languages
  - if [ "$(which python)" != "" ]; then echo "python $(which python)"; echo "$(python --version)"; else echo "python not found!"; exit 1; fi
  - if [ "$(which R)" != "" ]; then echo "R $(which R)"; echo "$(R --version)"; else echo "R not found!"; exit 1; fi
  - if [ "$(which psql)" != "" ]; then echo "psql $(which psql)\n $(psql --version)"; else echo "psql not found!"; exit 1; fi
  - if [ "$(which julia)" != "" ]; then echo "julia $(which julia)"; echo "$(julia --version)"; else echo "julia not found!"; exit 1; fi
  - if [ "$(which java)" != "" ]; then echo "java $(which java)"; echo "$(java -version)"; else echo "java not found!"; exit 1; fi
  - if [ "$(which dotnet)" != "" ]; then echo "dotnet $(which dotnet)"; echo "$(dotnet --info)"; else echo "dotnet not found!"; exit 1; fi
  - if [ "$(which gcc)" != "" ]; then echo "gcc $(which gcc)"; echo "$(gcc --version)"; else echo "gcc not found!"; exit 1; fi
  - if [ "$(which g++)" != "" ]; then echo "g++ $(which g++)"; echo "$(g++ --version)"; else echo "g++ not found!"; exit 1; fi
  - if [ "$(which gfortran)" != "" ]; then echo "gfortran $(which gfortran)"; echo "$(gfortran --version)"; else echo "gfortran not found!"; exit 1; fi
  # - development tools
  - if [ "$(which bash)" != "" ]; then echo "bash $(which bash)"; echo "$(bash --version)"; else echo "bash not found!"; exit 1; fi
  - if [ "$(which git)" != "" ]; then echo "git $(which git)"; echo "$(git --version)"; else echo "git not found!"; exit 1; fi
  - if [ "$(which htop)" != "" ]; then echo "htop $(which htop)"; echo "$(htop --version)"; else echo "htop not found!"; exit 1; fi
  - if [ "$(which firefox)" != "" ]; then echo "firefox $(which firefox)"; echo "$(firefox --version)"; else echo "firefox not found!"; exit 1; fi
  - if [ "$(which vim)" != "" ]; then echo "vim $(which vim)"; echo "$(vim --version)"; else echo "vim not found!"; exit 1; fi
  - if [ "$(which emacs)" != "" ]; then echo "emacs $(which emacs)"; echo "$(emacs --version)"; else echo "emacs not found!"; exit 1; fi
  - if [ "$(which nano)" != "" ]; then echo "nano $(which nano)"; echo "$(nano --version)"; else echo "nano not found!"; exit 1; fi
  - if [ "$(which code)" != "" ]; then echo "code $(which code)"; echo "$(code --version)"; else echo "code not found!"; exit 1; fi
  - if [ "$(which atom)" != "" ]; then echo "atom $(which atom)"; echo "$(dpkg -s atom)"; else echo "atom not found!"; exit 1; fi
  - if [ "$(which jupyter)" != "" ]; then echo "jupyter $(which jupyter)"; echo "$(jupyter --version)"; else echo "jupyter not found!"; exit 1; fi
  - if [ "$(which docker)" != "" ]; then echo "docker $(which docker)"; echo "$(docker --version)"; else echo "docker not found!"; exit 1; fi
  - if [ "$(which az)" != "" ]; then echo "az $(which az)"; echo "$(az --version)"; else echo "az not found!"; exit 1; fi
  - if [ "$(which azcopy)" != "" ]; then echo "azcopy $(which azcopy)"; echo "$(azcopy --version)"; else echo "azcopy not found!"; exit 1; fi
  - if [ "$(which scala)" != "" ]; then echo "scala $(which scala)"; else echo "scala not found!"; exit 1; fi
  #IF_TORCH_ENABLED - if [ "$(which th)" != "" ]; then echo "th $(which th)"; else echo "torch not found!"; exit 1; fi
  - if [ "$(which nvidia-smi)" != "" ]; then echo "nvidia-smi $(which nvidia-smi)"; echo "$(nvidia-smi --help)"; else echo "nvidia-smi not found!"; exit 1; fi
  - if [ "$(which rstudio)" != "" ]; then echo "rstudio $(which rstudio)"; echo "$(dpkg -s rstudio)"; else echo "rstudio not found!"; fi
  # Check for missing packages
  - echo "CRAN packages that could not be installed:"
  - Rscript -e "list.of.packages <- c($CRANPACKAGES); missing.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]; print(missing.packages)"
  - echo "Bioconductor packages that could not be installed:"
  - Rscript -e "list.of.packages <- c($BIOCPACKAGES); missing.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]; print(missing.packages)"

  # Deprovision
  - waagent -deprovision+user -force
  # Fix internet connectivity that is broken by waagent deprovisioning
  - ln -s /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf

final_message:
  "The system is setup and deprovisioned, after $UPTIME seconds"

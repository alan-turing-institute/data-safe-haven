#cloud-config
package_upgrade: false

write_files:
  - path: "/startwm.sh"
    content: |
      #!/bin/sh
      if [ -r /etc/default/locale ]; then
        . /etc/default/locale
        export LANG LANGUAGE
      fi
      # Start xfce4
      startxfce4
  - path: "/ldap.conf"
    content: |
      # The distinguished name of the search base.
      base LDAP_BASE_DN

      # Restrict users to those in the securioty group of this DSG
      filter LDAP_FILTER

      # Another way to specify your LDAP server is to provide an
      uri ldap://AD_DC_NAME_LOWER.DOMAIN_LOWER:389

      # The LDAP version to use (defaults to 3
      # if supported by client library)
      ldap_version 3

      # The distinguished name to bind to the server with
      # if the effective user ID is root. Password is
      # stored in /etc/ldap.secret (mode 600)
      rootbinddn LDAP_BIND_DN

      # Do not hash the password at all; presume
      # the directory server will do it, if
      # necessary. This is the default.
      pam_password md5
  - path: "/krb5.conf"
    content: |
      [libdefaults]
        default_realm = DOMAIN_UPPER

      # The following krb5.conf variables are only for MIT Kerberos.
        krb4_config = /etc/krb.conf
        krb4_realms = /etc/krb.realms
        kdc_timesync = 1
        ccache_type = 4
        forwardable = true
        proxiable = true

      # The following libdefaults parameters are only for Heimdal Kerberos.
        v4_instance_resolve = false
        v4_name_convert = {
          host = {
            rcmd = host
            ftp = ftp
          }
          plain = {
            something = something-else
          }
        }
        fcc-mit-ticketflags = true

      [realms]
          DOMAIN_UPPER = {
              kdc = AD_DC_NAME_UPPER.DOMAIN_UPPER:88
              admin_server = AD_DC_NAME_UPPER.DOMAIN_UPPER
              default_domain = DOMAIN_UPPER
              }

      [domain_realm]
            .DOMAIN_LOWER = DOMAIN_UPPER
            DOMAIN_LOWER = DOMAIN_UPPER

      [login]
        krb4_convert = true
        krb4_get_tickets = false
  - path: "/active_directory_step01_pre"
    content: |
      #!/bin/sh
      # Set up Active Directory
      # -----------------------
      echo "Setting up Active Directory..."
      # Ensure that sssd is running
      echo "Ensuring that sssd is running"
      systemctl status sssd.service
      # Add information to hosts file
      echo "Setting hostname"
      echo "MACHINENAME" > /etc/hostname
      cat /etc/hostname
      echo "Adding MACHINENAME [$(hostname -I)] to /etc/hosts"
      HOST_INFORMATION="$(hostname -I) MACHINENAME MACHINENAME.DOMAIN_LOWER"
      sed -i "/127.0.0.1/ a $HOST_INFORMATION" /etc/hosts
      cat /etc/hosts
      # Set timezone
      echo "Setting timezone"
      timedatectl set-timezone Europe/London
      # Create a default sssd.conf file
      echo "Creating sssd config"
      cp /usr/share/doc/sssd-common/examples/sssd-example.conf /etc/sssd/sssd.conf
      cat /etc/sssd/sssd.conf
      chmod 0600 /etc/sssd/sssd.conf
      # Edit LDAP config
      echo "Creating LDAP config"
      mv /ldap.conf /etc/ldap.conf
      cat /etc/ldap.conf
      # Store LDAP secret
      echo "Storing LDAP secret"
      echo "LDAP_SECRET_PLAINTEXT" > /etc/ldap.secret
      chmod 0600 /etc/ldap.secret
      # Edit Kerberos config
      echo "Updating Kerberos config"
      mv /krb5.conf /etc/krb5.conf
      cat /etc/krb5.conf
  - path: "/active_directory_step02_realm_join"
    content: |
      # Join the VM to the domain
      echo "Joining VM to the domain"
      cat /etc/ldap.secret | realm join --verbose -U LDAP_USER DOMAIN_LOWER --install=/
  - path: "/active_directory_step03_update_sssd"
    content: |
      # Check the sssd.conf file
      echo "Updating sssd settings"
      sed -i -E 's/(use_fully_qualified_names = ).*/\1False/' /etc/sssd/sssd.conf
      sed -i -E 's|(fallback_homedir = ).*|\1/home/%u|' /etc/sssd/sssd.conf
      sed -i -E 's/(access_provider = ).*/\1simple/' /etc/sssd/sssd.conf
      cat /etc/sssd/sssd.conf
      # Restart the sssd daemon
      echo "Restarting sssd"
      systemctl restart sssd
  - path: "/active_directory_step04_update_pam"
    content: |
      # Edit the pam session configuration file
      echo "Updating PAM configuration"
      PAM_INFORMATION="session required|pam_mkhomedir.so|skel=/etc/skel/|umask=0022"
      sed "/pam_unix/ a $PAM_INFORMATION" /etc/pam.d/common-session | tr "|" "\t" > common-session
      mv common-session /etc/pam.d/common-session
      cat /etc/pam.d/common-session
  - path: "/etc/pip.conf"
    content: |
      # Add the PyPI mirror to our global settings
      [global]
      index = PYPI_MIRROR_IP
      index-url = PYPI_MIRROR_IP/simple
      trusted-host = PYPI_MIRROR_IP
  - path: "/Rprofile.site"
    content: |
      ## Emacs please make this -*- R -*-
      ## empty Rprofile.site for R on Debian
      ##
      ## Copyright (C) 2008 - 2018  Dirk Eddelbuettel and GPL'ed
      ##
      ## see help(Startup) for documentation on ~/.Rprofile and Rprofile.site
      local({
          r <- getOption("repos")
          r["CRAN"] <- "CRAN_MIRROR_IP"
          options(repos = r)
      })

runcmd:
  # ==========================================
  # *** BEGINNING OF DSG-SPECIFIC COMMANDS ***
  # *** END OF DSG-SPECIFIC COMMANDS ***
  # ==========================================
  # Move CRAN mirror config to appropriate locations
  - cp /Rprofile.site /etc/R/Rprofile.site
  - cp /Rprofile.site /anaconda/envs/py27/lib/R/etc/Rprofile.site
  - cp /Rprofile.site /anaconda/envs/py36/lib/R/etc/Rprofile.site
  - cp /Rprofile.site /anaconda/envs/py37/lib/R/etc/Rprofile.site
  # Make sure that sssd is running
  - echo "Restart sssd service"
  - service sssd restart
  # Set py36 as default environment when launching a new shell
  - echo "Add py36 conda environment setup to global bashrc"
  - echo "conda activate py36" >> /etc/bash.bashrc
  # Disable light-locker which can cause irritating error messages
  - echo "Disable screen lock"
  - echo "Hidden=true" >> /etc/xdg/autostart/light-locker.desktop
  # Set default session to xfce4
  - echo "Set default session to xfce4"
  - mv /startwm.sh /etc/xrdp/startwm.sh
  - chmod 0755 /etc/xrdp/startwm.sh
  - echo xfce4-session > ~USERNAME/.xsession
  # Set default terminal for xfce
  - echo "Set default xfce terminal"
  - sed -i -E 's/(TerminalEmulator=).*/\1xfce4-terminal/' /etc/xdg/xfce4/helpers.rc
  # Ensure that user owns their home directory
  - echo "Ensure that user owns their home directory"
  - chown -R USERNAME ~USERNAME
  # Restart xrdp to reflect changes made above
  - echo "Restart xrdp"
  - service xrdp restart
  # Create shared data folder and grant all users access
  - echo "Creating shared data folder using data disk"
  - parted /dev/sdc mklabel gpt
  - parted /dev/sdc mkpart primary ext4 0% 100%
  - parted /dev/sdc print
  - sleep 5
  - mkfs -t ext4 /dev/sdc1
  - mkdir -p /data
  - mount /dev/sdc1 /data
  - chmod go+rw /data
  - UUID=$(blkid | grep "/dev/sdc1" | cut -d'"' -f2)
  - sed "s|UUID|UUID=$UUID\t/data\text4\tdefaults,nofail\t1\t2\nUUID|" /etc/fstab > fstab.tmp
  - mv fstab.tmp /etc/fstab
  # Add execute permission to the Active Directory set up scripts
  - chmod +x /active_directory_step01_pre
  - chmod +x /active_directory_step02_realm_join
  - chmod +x /active_directory_step03_update_sssd
  - chmod +x /active_directory_step04_update_pam
  # Run the Active Directory set up scripts
  - /active_directory_step01_pre
  - /active_directory_step02_realm_join
  - /active_directory_step03_update_sssd
  - /active_directory_step04_update_pam
  # Remove the Active Directory set up scripts (as these contain secrets and are world readable
  - rm /active_directory_step01_pre
  - rm /active_directory_step02_realm_join
  - rm /active_directory_step03_update_sssd
  - rm /active_directory_step04_update_pam
  # Update resolv.conf to point to the correct location
  - rm /etc/resolv.conf
  - sed -i -e "s/^#DNS=.*/DNS=/" -e "s/^#FallbackDNS=.*/FallbackDNS=/" -e "s/^#Domains=.*/Domains=DOMAIN_LOWER/" /etc/systemd/resolved.conf
  - ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf
  # Shutdown so that we can tell when the job has finished by polling the VM state
  - shutdown -P now


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "data-safe-haven"
dynamic = ["version"]
description = "An open-source framework for creating secure environments to analyse sensitive data."
authors = [
  { name = "Data Safe Haven development team", email = "safehavendevs@turing.ac.uk" },
]
requires-python = ">=3.10"
license = "BSD-3-Clause"
dependencies = [
  "appdirs~=1.4.4",
  "azure-core~=1.26.0",
  "azure-identity~=1.12.0",
  "azure-keyvault-certificates~=4.6.0",
  "azure-keyvault-keys~=4.6.0",
  "azure-keyvault-secrets~=4.6.0",
  "azure-mgmt-automation~=1.0.0",
  "azure-mgmt-compute~=29.1.0",
  "azure-mgmt-containerinstance~=9.2.0",
  "azure-mgmt-dns~=8.0.0",
  "azure-mgmt-keyvault~=9.3.0",
  "azure-mgmt-msi~=6.1.0",
  "azure-mgmt-network~=20.0.0",
  "azure-mgmt-rdbms~=10.1.0",
  "azure-mgmt-resource~=20.1.0",
  "azure-mgmt-storage~=19.1.0",
  "azure-storage-blob~=12.15.0",
  "azure-storage-file-datalake~=12.10.0",
  "azure-storage-file-share~=12.10.0",
  "chevron~=0.14.0",
  "chili~=^2.1.0",
  "cryptography~=3.4.0",
  "dnspython~=2.3.0",
  "msal~=1.21.0",
  "psycopg2~=2.9.0",
  "pulumi~=3.67.0",
  "pulumi-azure-native~=1.95.0",
  "pytz~=2022.7.0",
  "PyYAML~=6.0",
  "rich~=13.4.2",
  "simple-acme-dns~=1.2.0",
  "typer~=0.9.0",
  "websocket-client~=1.5.0",
]

[project.scripts]
dsh = "data_safe_haven.cli:main"

[tool.hatch.version]
path = "data_safe_haven/__about__.py"

[tool.hatch.envs.lint]
detached = true
black = "^22.12.0"
mypy = "^1.0.0"

[tool.hatch.envs.lint.scripts]
typing = "mypy --strict --install-types --non-interactive --namespace-packages --explicit-package-bases {args:data_safe_haven}"
style = [
  "ruff {args:data_safe_haven}",
  "black --check --diff {args:data_safe_haven}",
]
fmt = [
  "black {args:data_safe_haven}",
  "ruff --fix {args:data_safe_haven}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py310", "py311"]
skip-string-normalization = true

[tool.ruff]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["data_safe_haven"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
strict = true
files = "data_safe_haven"
mypy_path = "typings"

[[tool.mypy.overrides]]
module = [
    "azure.mgmt.automation.*",
    "azure.mgmt.containerinstance.*",
    "azure.mgmt.dns.*",
    "azure.mgmt.keyvault.*",
    "azure.mgmt.rdbms.postgresql.*",
    "azure.mgmt.resource.*",
    "azure.mgmt.storage.*",
    "cleo.*",
    "clikit.*",
    "dotmap.*",
    "msal.*",
    "simple_acme_dns.*",
    "websocket.*",
]
ignore_missing_imports = true

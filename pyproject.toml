[tool.poetry]
name = "data-safe-haven"
version = "4.0.0"
description = "An open-source framework for creating secure environments to analyse sensitive data."
authors = ["Data Safe Haven development team <safehavendevs@turing.ac.uk>"]

[tool.poetry.dependencies]
python = "^3.10"
azure-core = "^1.26.0"
azure-identity = "^1.12.0"
azure-keyvault-certificates = "^4.6.0"
azure-keyvault-keys = "^4.6.0"
azure-keyvault-secrets = "^4.6.0"
azure-mgmt-automation = "^1.0.0"
azure-mgmt-compute = "^29.1.0"
azure-mgmt-containerinstance = "^9.2.0"
azure-mgmt-dns = "^8.0.0"
azure-mgmt-keyvault = "^9.3.0"
azure-mgmt-msi = "^6.1.0"
azure-mgmt-network = "^20.0.0"
azure-mgmt-rdbms = "^10.1.0"
azure-mgmt-resource = "^20.1.0"
azure-mgmt-storage = "^19.1.0"
azure-storage-blob = "^12.14.0"
azure-storage-file-share = "^12.10.0"
chevron = "^0.14.0"
cleo = "^0.8.1"
cryptography = "^3.4.0"
dnspython = "^2.3.0"
dotmap = "^1.3.0"
msal = "^1.21.0"
poetry = "^1.1.0"
psycopg2 = "^2.9.0"
pulumi = "^3.55.0"
pulumi-azure-native = "^1.95.0"
pytz = "^2022.7.0"
PyYAML = "^6.0"
simple-acme-dns = "^1.2.0"
websocket-client = "^1.5.0"

[tool.poetry.dev-dependencies]
black = "^22.12.0"
mypy = "^1.0.0"
pytest = "^7.2"
types-chevron = "^0.14.2"
types-protobuf = "^4.21.0"
types-psycopg2 = "^2.9.21"
types-pytz = "^2022.7.1"
types-PyYAML = "^6.0.12"
types-requests = "^2.28.11"
types-setuptools = "^67.3.0"
types-six = "^1.16.21"

[tool.poetry.scripts]
dsh = "data_safe_haven.cli:main"

[tool.mypy]
strict = true
files = "data_safe_haven"
exclude = [
    "data_safe_haven/administration/users/guacamole_users.py",
    "data_safe_haven/commands/deploy_shm_command.py",
    "data_safe_haven/commands/deploy_sre_command.py",
    "data_safe_haven/commands/initialise_command.py",
    "data_safe_haven/commands/teardown_backend_command.py",
    "data_safe_haven/commands/teardown_shm_command.py",
    "data_safe_haven/commands/teardown_sre_command.py",
    "data_safe_haven/commands/users_add.py",
    "data_safe_haven/commands/users_list.py",
    "data_safe_haven/commands/users_register.py",
    "data_safe_haven/external/api/azure_api.py",
    "data_safe_haven/external/api/graph_api.py",
    "data_safe_haven/external/interface/azure_fileshare.py",
    "data_safe_haven/external/interface/azure_postgresql_database.py",
    "data_safe_haven/helpers/__init__.py",
    "data_safe_haven/mixins/logging_mixin.py",
    "data_safe_haven/provisioning/sre_provisioning_manager.py",
    "data_safe_haven/pulumi/components/shm_domain_controllers.py",
    "data_safe_haven/pulumi/components/shm_firewall.py",
    "data_safe_haven/pulumi/components/shm_monitoring.py",
    "data_safe_haven/pulumi/components/sre_application_gateway.py",
    "data_safe_haven/pulumi/components/sre_networking.py",
    "data_safe_haven/pulumi/components/sre_remote_desktop.py",
    "data_safe_haven/pulumi/components/sre_research_desktop.py",
    "data_safe_haven/pulumi/components/sre_state.py",
    "data_safe_haven/pulumi/components/virtual_machine.py",
    "data_safe_haven/pulumi/declarative_shm.py",
    "data_safe_haven/pulumi/declarative_sre.py",
    "data_safe_haven/pulumi/dynamic/azuread_application.py",
    "data_safe_haven/pulumi/dynamic/file_share_file.py",
    "data_safe_haven/pulumi/dynamic/remote_powershell.py",
    "data_safe_haven/pulumi/dynamic/ssl_certificate.py",
    "data_safe_haven/pulumi/pulumi_stack.py",
]
mypy_path = "mypy"

[[tool.mypy.overrides]]
module = "azure.*"
ignore_errors = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pulumi_azure_native.*"
ignore_errors = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "data-safe-haven"
dynamic = ["version"]
description = "An open-source framework for creating secure environments to analyse sensitive data."
authors = [
  { name = "Data Safe Haven development team", email = "safehavendevs@turing.ac.uk" },
]
requires-python = ">=3.10"
license = "BSD-3-Clause"
dependencies = [
  "appdirs~=1.4.4",
  "azure-core~=1.26.0",
  "azure-identity~=1.12.0",
  "azure-keyvault-certificates~=4.6.0",
  "azure-keyvault-keys~=4.6.0",
  "azure-keyvault-secrets~=4.6.0",
  "azure-mgmt-automation~=1.0.0",
  "azure-mgmt-compute~=29.1.0",
  "azure-mgmt-containerinstance~=9.2.0",
  "azure-mgmt-dns~=8.0.0",
  "azure-mgmt-keyvault~=9.3.0",
  "azure-mgmt-msi~=6.1.0",
  "azure-mgmt-network~=20.0.0",
  "azure-mgmt-rdbms~=10.1.0",
  "azure-mgmt-resource~=20.1.0",
  "azure-mgmt-storage~=19.1.0",
  "azure-storage-blob~=12.15.0",
  "azure-storage-file-datalake~=12.10.0",
  "azure-storage-file-share~=12.10.0",
  "bcrypt~=4.0.0",
  "chevron~=0.14.0",
  "chili~=2.1.0",
  "cryptography~=3.4.0",
  "dnspython~=2.3.0",
  "msal~=1.21.0",
  "psycopg2~=2.9.0",
  "pulumi~=3.77.1",
  "pulumi-azure-native~=1.95.0",
  "pytz~=2022.7.0",
  "PyYAML~=6.0",
  "rich~=13.4.2",
  "simple-acme-dns~=1.2.0",
  "typer~=0.9.0",
  "websocket-client~=1.5.0",
]

[project.scripts]
dsh = "data_safe_haven.cli:main"

[tool.hatch.version]
path = "data_safe_haven/version.py"

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  "types-appdirs>=1.4.3.5",
  "types-chevron>=0.14.2.5",
  "types-psycopg2>=2.9.21.11",
  "types-pytz>=2023.3.0.0",
  "types-PyYAML>=6.0.12.11",
  "types-requests>=2.31.0.2",
]

[tool.hatch.envs.lint.scripts]
typing = "mypy {args:data_safe_haven}"

style = [
  "ruff {args:data_safe_haven}",
  "black --check --diff {args:data_safe_haven}",
]
fmt = [
  "black {args:data_safe_haven}",
  "ruff --fix {args:data_safe_haven}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py310", "py311"]

[tool.ruff]
select = [
  # See https://beta.ruff.rs/docs/rules/
  "A",   # flake8-builtins
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C",   # complexity, mcabe and flake8-comprehensions
  "DTZ", # flake8-datetimez
  "E",   # pycodestyle errors
  "EM",  # flake8-errmsg
  "F",   # pyflakes
  "FBT", # flake8-boolean-trap
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PLC", # pylint convention
  "PLE", # pylint error
  "PLR", # pylint refactor
  "PLW", # pylint warning
  "Q",   # flake8-quotes
  "RUF", # ruff rules
  "S",   # flake8-bandits
  "T",   # flake8-debugger and flake8-print
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "W",   # pycodestyle warnings
  "YTT", # flake8-2020
]
ignore = [
  "E501",     # ignore line length
  "S106",     # ignore check for possible passwords
  "S603",     # allow subprocess without shell=True
  "S607",     # allow subprocess without absolute path
  "C901",     # ignore complex-structure
  "PLR0912",  # ignore too-many-branches
  "PLR0913",  # ignore too-many-arguments
  "PLR0915",  # ignore too-many-statements
]

[tool.ruff.isort]
combine-as-imports = true
known-first-party = ["data_safe_haven"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.mypy]
disallow_subclassing_any = false  # allow subclassing of types from third-party libraries
files = "data_safe_haven"         # run mypy over this directory
mypy_path = "typings"             # use this directory for stubs
strict = true                     # enable all optional error checking flags

[[tool.mypy.overrides]]
module = [
    "acme.*",
    "azure.core.*",
    "azure.identity.*",
    "azure.keyvault.*",
    "azure.mgmt.*",
    "azure.storage.*",
    "chili.*",
    "cryptography.*",
    "dns.*",
    "msal.*",
    "pulumi.*",
    "pulumi_azure_native.*",
    "rich.*",
    "simple_acme_dns.*",
    "typer.*",
    "websocket.*",
]
ignore_missing_imports = true

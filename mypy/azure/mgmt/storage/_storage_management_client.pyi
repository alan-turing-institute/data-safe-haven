from typing import Any, Optional
from _typeshed import Incomplete
from azure.core.credentials import TokenCredential
from azure.profiles import KnownProfiles
from azure.profiles.multiapiclient import MultiApiClientMixin
from .v2021_08_01.operations._storage_accounts_operations import (
    StorageAccountsOperations,
)

class _SDKClient:
    def __init__(self, *args, **kwargs) -> None: ...

class StorageManagementClient(MultiApiClientMixin, _SDKClient):
    DEFAULT_API_VERSION: str
    LATEST_PROFILE: Incomplete
    def __init__(
        self,
        credential: TokenCredential,
        subscription_id: str,
        api_version: Optional[str] = ...,
        base_url: str = ...,
        profile: KnownProfiles = ...,
        **kwargs: Any
    ) -> None: ...
    @classmethod
    def models(cls, api_version=...): ...
    @property
    def blob_containers(self): ...
    @property
    def blob_inventory_policies(self): ...
    @property
    def blob_services(self): ...
    @property
    def deleted_accounts(self): ...
    @property
    def encryption_scopes(self): ...
    @property
    def file_services(self): ...
    @property
    def file_shares(self): ...
    @property
    def local_users(self): ...
    @property
    def management_policies(self): ...
    @property
    def object_replication_policies(self): ...
    @property
    def operations(self) -> StorageAccountsOperations: ...
    @property
    def private_endpoint_connections(self): ...
    @property
    def private_link_resources(self): ...
    @property
    def queue(self): ...
    @property
    def queue_services(self): ...
    @property
    def skus(self): ...
    @property
    def storage_accounts(self): ...
    @property
    def table(self): ...
    @property
    def table_services(self): ...
    @property
    def usage(self): ...
    @property
    def usages(self): ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *exc_details) -> None: ...
